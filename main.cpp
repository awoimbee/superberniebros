
#include <iostream>
#include <SFML/Graphics.hpp>
#include "Player/Player.h"
#include "BadGuys/BadGuy.h"
#include "coin/coin.h"
#include "MoneyBagsBro/MoneyBagsBro.h"
#include "Game/Game.h"
#include "Level/Level.h"
#include "JPMorgan/JPMorgan.h"
using namespace sf;
using namespace std;
//the tile object, used to make the levels

int main() {
    Texture texture;
    Texture playerTexture;
    Texture badGuyTexture;
    Texture gildedAgeBackground;
    Texture ProgressiveAgeBackground;
    Texture BossFace;
    Texture JPMorgan;
    Texture ColonelSanders;
    Texture HarryWhite;
    Texture moneyBag;
    Texture chickenNugget;
    Texture coinTexture;
    Texture shermanAntiTrustActTexture;
    Texture deathScreenTexture;
    Sprite deathScreen;
    Text restart;
    Text won;
    Text JPMorganDialogue;
    Text ColonelSandersDialogue;
    Font arialFont;

    chickenNugget.loadFromFile("./assets/chickennugget.png");
    ColonelSanders.loadFromFile("./assets/Colonel-Sanders.png");
    HarryWhite.loadFromFile("./assets/harrydexterwhite.png");
    JPMorgan.loadFromFile("./assets/JohnPierpontMorgan.png");
    deathScreenTexture.loadFromFile("./assets/You-Died.jpg");
    deathScreen.setTexture(deathScreenTexture);
    deathScreen.setPosition(712.5, 325);

    if(!arialFont.loadFromFile("./assets/arial.ttf")) {
        cout << "couldn't load";
    };
    restart.setFont(arialFont);
    restart.setCharacterSize(50);
    restart.setPosition(680, 700);
    restart.setString("Press ENTER to restart level");
    won.setFont(arialFont);
    won.setCharacterSize(150);
    won.setPosition(680, 400);
    won.setString("YOU WIN!");
    JPMorganDialogue.setFont(arialFont);
    JPMorganDialogue.setCharacterSize(30);
    JPMorganDialogue.setPosition(100,100);
    JPMorganDialogue.setColor(Color::Black);
    JPMorganDialogue.setString("Hello, Bernie! My name is John Pierpont Morgan. I'm a Guilded age tycoon.\n"
                                       "I invested and organized in railroads, U.S. steel, and other major companies.\n "
                                       "At one point, I owned an estimated 1/6th of all railroads in the U.S.\n"
                                       "I used this power to influence the U.S financial system for my own gain.\n"
                                       "During the financial panic of 1907, I led Wall Street to stabilize the U.S. economy,\n and even bailed out the U.S. government for $60 million to stabilize the gold standard.\n"
                                       "I became one of the most powerful men of the time with an estimated net worth of $41 billion!\n You are no match for my powers of investment!");
    ColonelSandersDialogue.setFont(arialFont);
    ColonelSandersDialogue.setCharacterSize(30);
    ColonelSandersDialogue.setPosition(100,100);
    ColonelSandersDialogue.setColor(Color::Black);
    ColonelSandersDialogue.setString("Hey there Bernie! My name is Harland sanders.\nI started frying chicken in the back of a gas station on Route 25 in 1930.\nThe business soon became successful and by 1963\nmy one restaurant became 600 in the U.S alone.\nMy restaurant was the first sign of a shift in our economy as\nwe slowly turned to consumerism, leaving behind our power as an industrial giant.\nCan you defeat my 11 herbs and spices??");
    if(!coinTexture.loadFromFile("./assets/25-color.png")){
        cout <<"Couldnt find coin texture";
    };
    shermanAntiTrustActTexture.loadFromFile("./assets/ClosedScroll.png");
    moneyBag.loadFromFile("./assets/Money_Bag.png");
    BossFace.loadFromFile("./assets/joh-d-rockefeller.png");
    //This reference only works on my computer, also the spritesheet is a temporary one, we'll need to make our own.
    texture.loadFromFile("./assets/tiles_spritesheet.png");
    playerTexture.loadFromFile("./assets/BernieSandersSprite10.png");
    badGuyTexture.loadFromFile("./assets/208d9881e946f9a3f58662409cbf3831.jpg");



    vector<vector<vector<vector<int>>>> levelArrayArray = {{
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {0,0}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {0,0}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {0,0}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {0,0}, {}, {}, {},    {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {0,0}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {0,0}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {0,0}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},    {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},    {}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {}, {}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {}, {}, {}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0},  {}, {}, {}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {0, 0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {0, 0},{0, 0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {0, 0}, {0, 0},{0, 0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {0, 0}, {0, 0}, {0, 0}, {0, 0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},

                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {0,0},      {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0}, {0,0},   {0,0}, {0,0}, {0,0}, {0,0}, {0,0}},
                                                           },
                                                           {
                                                                   {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {}, {}, {}, {}, {}, {}, {}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}},
                                                                   {{0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {0,0}, {}, {0,0},  {0,0}, {0,0}, {0,0}, {0,0}}
                                                           },

                                                           {
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7, 8}, {8, 12}, {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {}, {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7, 8}, {8, 12}, {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},      {},      {},      {},      {}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},      {},      {},      {},      {}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8}, {8, 12}, {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8}, {8, 12}, {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {}, {7, 8}, {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},      {7, 8},  {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},      {7, 8},  {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {7,8}, {},      {},      {7, 8},  {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {7,8}, {},      {},      {7, 8},  {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {7,8}, {},      {},      {7, 8},  {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7, 8},  {8, 12}, {8, 12}, {8, 12}, {8, 12}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {},  {}, {}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},

                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {7,8},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {7,8}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {7,8}, {8,12}, {8,12},     {8,12},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{}, {}, {}, {}, {7,8}, {}, {}, {}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                                   {{8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {},     {7,8},  {8,12}, {8,12}, {}, {7, 8}},
                                                           },
                                                           {
                                                                   {{8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12},{8,12}, {8,12}, {8,12},  {8,12}, {8,12}, {8,12}, {8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {}, {}, {}, {}, {}, {}, {}, {}, {7,8},  {8,12}, {8,12}, {8,12},{8,12}},
                                                                   {{8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12}, {8,12},{8,12}, {}, {7,8},  {8,12}, {8,12}, {8,12}, {8,12}},
                                                           }
    };
    vector<vector<vector<int>>> levelMonsterArrayArray = {{
                                                                {720, -100},
                                                                {2010, 500},
                                                                  {2100, 500},
                                                                  {2800, 500},
                                                                  {3300, 500},
                                                                  {3900, 500}
                                                        },
                                                          {},
                                                          {
            {1200, 400},
            {1500, 100},
            {600, 100},
            {2090, 600},
            {2300, 510},
            {2300, 100},
            {3500, 500},
            {3600, 500},
            {3700, 500},
            {4500, 864}

    }, {}};
    vector<vector<vector<int>>> levelMoneyBagsBroArray = {{
                                                                  {1440, -100},
                                                                  {3000, 500}
                                                       },
                                                          {},{
            {1000, 100},
            {2160, 100},
            {4800, 100}
    }, {}};
    vector<vector<vector<int>>> levelCoinArrayArray = {{
                                                               {200, 400}, {400, 400}, {1000, 500}, {1100, 500}, {1200, 500}, {1300, 500}, {1800,250}, {3400, 500}, {2700, 800}, {2800, 800}, {2900, 800}, {3000, 800}
                                                       },
                                                       {},
                                                       {{500, 500}, {1200, 200}, {1300, 200}, {2400, 200}, {2500, 200},{3000, 400}, {3100, 400}, {4500, 300}, {4600, 300} },
                                                       {}};
    vector<vector<vector<int>>> levelShermanAntiTrustActArrayArray = {{
                                                               {1900, 200}
                                                       },
                                                                      {},
                                                       {{2000, 100}},
                                                                      {}};

    vector<vector<vector<int>>> levelBossArrayArray = {
            {}, {{1500, 200}}, {}, {{1600, 200}}
    };
    //Level level(.75, 50000, levelArray, levelMonsterArray, levelMoneyBagsBroArray, texture, badGuyTexture, playerTexture, BossFace);
    Game game(.75, texture, badGuyTexture, playerTexture, coinTexture, shermanAntiTrustActTexture, arialFont, levelArrayArray, levelMonsterArrayArray, levelMoneyBagsBroArray, levelBossArrayArray, levelCoinArrayArray, levelShermanAntiTrustActArrayArray);

    //set textures for money bags bros

    for (int i = levelMonsterArrayArray[0].size(); i < levelMonsterArrayArray[0].size()+levelMoneyBagsBroArray[0].size(); i++) {
        game.levels[0].entities[i] -> setTexture(BossFace);
    }
    for (int i = levelMonsterArrayArray[1].size(); i < levelMonsterArrayArray[1].size()+levelMoneyBagsBroArray[1].size(); i++) {
        game.levels[1].entities[i] -> setTexture(BossFace);
    }
    for (int i = levelMonsterArrayArray[2].size(); i < levelMonsterArrayArray[2].size()+levelMoneyBagsBroArray[2].size(); i++) {
        game.levels[2].entities[i] -> setTexture(HarryWhite);
        game.levels[2].entities[i] -> setScale(0.146, 0.16);
    }

    game.levels[1].entities[game.levels[1].entities.size()-1] -> setTexture(JPMorgan);

    game.levels[3].entities[game.levels[3].entities.size()-1] -> setTexture(ColonelSanders);
    RenderWindow window(sf::VideoMode(2000, 1000), "SFML!");
    Keyboard keyboard;
    window.setView(game.levels[game.currentLevel].view);
    window.setFramerateLimit(60);
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
        }

        if (game.levels[game.currentLevel].player.playerSprite.getPosition().x > game.levels[game.currentLevel].tiles[game.levels[game.currentLevel].tiles.size() - 1].getPosition().x-72) {
            if (game.levels.size()-1 > game.currentLevel) {
                game.currentLevel++;
                game.levels[game.currentLevel].player.playerSprite.setPosition(100, 400);
                game.levels[game.currentLevel].view.setCenter(1000,500);
                window.setView(game.levels[game.currentLevel].view);
                game.moneyCounter.setPosition(10, 10);
            }
            else {
                game.won=true;
            }
        }

        //Move this to inside level physics class
        if (game.levels[game.currentLevel].player.playerSprite.getPosition().x > game.levels[game.currentLevel].tiles[0].getPosition().x + 1000 &&
            game.levels[game.currentLevel].player.playerSprite.getPosition().x < game.levels[game.currentLevel].tiles[game.levels[game.currentLevel].tiles.size() - 1].getPosition().x - 1000) {
            game.levels[game.currentLevel].view.setCenter(game.levels[game.currentLevel].player.playerSprite.getPosition().x, 500);
            window.setView(game.levels[game.currentLevel].view);
            game.moneyCounter.setPosition(game.levels[game.currentLevel].player.playerSprite.getPosition().x-990, 10);
        }


        if (game.levels[game.currentLevel].player.frameCounter == 60) {
            game.levels[game.currentLevel].player.frameCounter = 0;
            game.levels[game.currentLevel].secondCounter++;
            game.shermanAntiTrustActCounter--;
        }

        game.levels[game.currentLevel].player.frameCounter += 10;


        window.clear(Color::White);

        if (game.currentLevel == 1) {
            window.draw(JPMorganDialogue);
        }
        if (game.currentLevel == 3) {
            window.draw(ColonelSandersDialogue);
        }

        /*
         * This code moves the banker and checks collisions BEFORE drawing. It does it in each x and y separately so that the collisions can be dealt with in each dimension
         */
        game.levels[game.currentLevel].activateMonsters();
        game.levels[game.currentLevel].HandleKeypresses(keyboard);

        game.levels[game.currentLevel].Physics(moneyBag, chickenNugget, game.currentLevel);

        game.checkCoinCollection();
        game.checkPowerUpCollection();
        //Level level(.75, 50000, levelArray, levelMonsterArray, levelMoneyBagsBroArray, texture, badGuyTexture, playerTexture, BossFace);
        for (int i = 0; i < game.levels[game.currentLevel].tiles.size(); i++) {
            window.draw(game.levels[game.currentLevel].tiles[i]);
        }
        for (int i = 0; i < game.levels[game.currentLevel].coins.size(); i++ ) {
            game.levels[game.currentLevel].coins[i] -> updateTextureRect(game.levels[game.currentLevel].player.frameCounter);
            window.draw(game.levels[game.currentLevel].coins[i] -> sprite);
        }
        for (int i = 0; i < game.levels[game.currentLevel].powerUps.size(); i++ ) {
            window.draw(game.levels[game.currentLevel].powerUps[i] -> sprite);
        }
        for (int i = 0; i < game.levels[game.currentLevel].entities.size(); i++) {
            game.levels[game.currentLevel].entities[i] -> updateTextureRect(game.levels[game.currentLevel].player.frameCounter);

            window.draw(game.levels[game.currentLevel].entities[i] -> sprite);
        };

        window.draw(game.moneyCounter);
        window.draw(game.levels[game.currentLevel].player.playerSprite);

        if (game.shermanAntiTrustActCounter > 0) {
            if (game.currentLevel == 0) {
                window.draw(game.shermanAntiTrustAct);
            }
            else {
                game.shermanAntiTrustAct.setString("Glass Steagall!");
                window.draw(game.shermanAntiTrustAct);
            }

        }

        if (game.levels[game.currentLevel].player.playerSprite.getPosition().y > 2500) {

            window.clear(Color::Black);
            game.levels[game.currentLevel].view.setCenter(1000,500);
            window.setView(game.levels[game.currentLevel].view);
            game.moneyCounter.setPosition(10, 10);
            window.draw(deathScreen);
            window.draw(restart);
            if (keyboard.isKeyPressed(Keyboard::Return)) {
                game.levels[game.currentLevel].Restart(levelMonsterArrayArray[game.currentLevel], levelMoneyBagsBroArray[game.currentLevel], levelBossArrayArray[game.currentLevel], levelCoinArrayArray[game.currentLevel], badGuyTexture, playerTexture, coinTexture);
                for (int i = levelMonsterArrayArray[0].size(); i < levelMonsterArrayArray[0].size()+levelMoneyBagsBroArray[0].size(); i++) {
                    game.levels[0].entities[i] -> setTexture(BossFace);
                }
                for (int i = levelMonsterArrayArray[1].size(); i < levelMonsterArrayArray[1].size()+levelMoneyBagsBroArray[1].size(); i++) {
                    game.levels[1].entities[i] -> setTexture(BossFace);
                }
                for (int i = levelMonsterArrayArray[2].size(); i < levelMonsterArrayArray[2].size()+levelMoneyBagsBroArray[2].size(); i++) {
                    game.levels[2].entities[i] -> setTexture(HarryWhite);
                    game.levels[2].entities[i] -> setScale(0.148, 0.164);
                }
                game.levels[1].entities[game.levels[1].entities.size()-1] -> setTexture(JPMorgan);
                game.levels[3].entities[game.levels[3].entities.size()-1] -> setTexture(ColonelSanders);
            }
        }
        if (game.won) {
            window.clear(Color::Black);
            game.levels[game.currentLevel].view.setCenter(1000,500);
            window.setView(game.levels[game.currentLevel].view);
            window.draw(won);
        }
        window.display();

    }
}